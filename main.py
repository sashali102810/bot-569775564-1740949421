Для создания Telegram-бота, который показывает случайные факты о животных по команде `/fact`, мы будем использовать библиотеку `python-telegram-bot` версии 20.x. Также добавим обработку ошибок и логирование.

### Шаги для создания бота:

1. **Установка необходимых библиотек**:
   Убедитесь, что у вас установлена библиотека `python-telegram-bot` версии 20.x. Если нет, установите её с помощью pip:

   ```bash
   pip install python-telegram-bot --upgrade
   ```

2. **Создание бота**:
   Создайте файл `animal_facts_bot.py` и добавьте следующий код:

   ```python
   import logging
   import random
   from telegram import Update
   from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

   # Настройка логирования
   logging.basicConfig(
       format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
       level=logging.INFO
   )
   logger = logging.getLogger(__name__)

   # Список случайных фактов о животных
   ANIMAL_FACTS = [
       "Слоны — единственные животные, которые не умеют прыгать.",
       "У улитки около 25 000 зубов.",
       "Сердце креветки находится в её голове.",
       "Кошки могут издавать более 100 различных звуков.",
       "Крокодилы не могут высовывать язык.",
       "Свиньи не могут смотреть вверх.",
       "У жирафа столько же шейных позвонков, сколько и у человека — семь.",
       "Пингвины могут прыгать в высоту до 2 метров.",
       "У тигров не только полосатый мех, но и полосатая кожа.",
       "Осьминоги имеют три сердца."
   ]

   # Команда /fact
   async def fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
       try:
           # Выбираем случайный факт
           random_fact = random.choice(ANIMAL_FACTS)
           # Отправляем факт пользователю
           await update.message.reply_text(random_fact)
       except Exception as e:
           logger.error(f"Ошибка при обработке команды /fact: {e}")
           await update.message.reply_text("Произошла ошибка при получении факта. Попробуйте ещё раз.")

   # Основная функция
   def main():
       # Создаем приложение и передаем токен бота
       application = ApplicationBuilder().token("YOUR_BOT_TOKEN").build()

       # Регистрируем обработчик команды /fact
       application.add_handler(CommandHandler("fact", fact))

       # Запускаем бота
       application.run_polling()

   if __name__ == '__main__':
       main()
   ```

3. **Запуск бота**:
   Замените `"YOUR_BOT_TOKEN"` на токен вашего бота, который вы получили от BotFather в Telegram. Затем запустите скрипт:

   ```bash
   python animal_facts_bot.py
   ```

4. **Тестирование бота**:
   Откройте Telegram, найдите своего бота и отправьте ему команду `/fact`. Бот должен ответить случайным фактом о животных.

### Описание кода:

- **Логирование**: Мы используем модуль `logging` для логирования ошибок и другой информации. Это поможет отслеживать проблемы и отлаживать бота.
  
- **Обработка ошибок**: В функции `fact` добавлен блок `try-except`, чтобы обрабатывать возможные ошибки и уведомлять пользователя, если что-то пошло не так.

- **Список фактов**: Мы используем список `ANIMAL_FACTS`, который содержит несколько случайных фактов о животных. Вы можете расширить этот список или даже подключить API для получения фактов.

- **Команда /fact**: Когда пользователь отправляет команду `/fact`, бот выбирает случайный факт из списка и отправляет его пользователю.

Теперь у вас есть полнофункциональный Telegram-бот, который показывает случайные факты о животных по команде `/fact`.